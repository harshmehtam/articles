{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","padding","cardRoot","maxWidth","media","height","App","classes","useState","article","setArticles","page","setPage","size","totalPassenger","setTotalPassenger","useEffect","fetchNextUsers","fetch","then","response","json","articles","data","totalPassengers","dataLength","length","next","hasMore","loader","style","display","flexWrap","map","art","Grid","marginBottom","marginTop","item","xs","sm","Card","className","CardActionArea","CardMedia","image","airline","logo","title","name","CardContent","Typography","gutterBottom","variant","component","color","head_quaters","CardActions","Button","established","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAaMA,G,MAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,IAEXC,SAAU,CACRC,SAAU,KAEZC,MAAO,CACLC,OAAQ,QA+DGC,MA3Df,WACE,IAAMC,EAAUT,IADH,EAEkBU,mBAAS,IAF3B,mBAENC,EAFM,KAEGC,EAFH,OAGWF,mBAAS,GAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAIWJ,mBAAS,IAJpB,mBAINK,EAJM,aAK+BL,sBAL/B,mBAKNM,EALM,KAKUC,EALV,KAObC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAiB,WACrBC,MAAM,qDAAD,OAAsDP,EAAtD,iBAAmEE,IACrEM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJX,GAAY,SAAAY,GAAQ,4BAAQA,GAAR,YAAqBD,EAAKE,UAC9CX,GAAQ,SAAAD,GAAI,OAAIA,EAAO,KACvBI,EAAkBM,EAAKG,qBAI7B,OACE,cAAC,IAAD,CACEC,WAAYhB,EAAQiB,OACpBC,KAAMV,EACNW,QAASnB,EAAQiB,OAASZ,EAC1Be,OAAQ,8CACRC,MAAO,CAAEC,QAAS,OAAQC,SAAU,QALtC,SAQIvB,EAAQwB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAA,EAAD,CAAML,MAAO,CAAEM,aAAc,GAAIC,UAAW,IAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAlE,SACjB,eAACC,EAAA,EAAD,CAAMC,UAAWnC,EAAQL,SAAzB,UACE,eAACyC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEF,UAAWnC,EAAQH,MACnByC,MAAOX,EAAIY,QAAQC,MAAQ,GAC3BC,MAAOd,EAAIe,OAEb,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGpB,EAAIe,OAEP,cAACE,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGpB,EAAIsB,qBAIX,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQ7C,KAAK,QAAQ0C,MAAM,UAA3B,SACGrB,EAAIyB,2BC9DNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9409572b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InfinitScroll from 'react-infinite-scroll-component'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 20\n  },\n  cardRoot: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [article, setArticles] = useState([]);\n  const [page, setPage] = useState(0);\n  const [size, setSize] = useState(10);\n  const [totalPassenger, setTotalPassenger] = useState();\n\n  useEffect(() => {\n    fetchNextUsers()\n  }, [])\n\n  const fetchNextUsers = () => {\n    fetch(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=${size}`)\n      .then(response => response.json())\n      .then(json => {\n        setArticles(articles => [...articles, ...json.data])\n        setPage(page => page + 1)\n        setTotalPassenger(json.totalPassengers)\n      })\n  }\n\n  return (\n    <InfinitScroll\n      dataLength={article.length}\n      next={fetchNextUsers}\n      hasMore={article.length < totalPassenger}\n      loader={<h4>Loading ... </h4>}\n      style={{ display: 'flex', flexWrap: 'wrap' }}\n    >\n      {\n        article.map(art => <Grid style={{ marginBottom: 10, marginTop: 20 }} item xs={4} sm={4}>\n          <Card className={classes.cardRoot}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={art.airline.logo || ''}\n                title={art.name}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {art.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {art.head_quaters}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                {art.established}\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>)\n      }\n    </InfinitScroll>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}